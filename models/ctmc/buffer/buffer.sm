ctmc

const int max_slow_buffer = 31;
const int max_fast_buffer = 21;


// request production rate (between 20 and 40)
const double p_g;

// request transmission rate
const double p_t;

// fast buffer
const double r_fast_rate; // = 15 [5..30]

// slow buffer
const double r_slow_rate; // = 15 [5..30]

// packet consumption rate
const double p_c;

// packet loss probability
const double lossProbability;


module Buffer
  fast : [0..1] init 0;
  slow : [0..1] init 0;
  buffer_s : [0..max_slow_buffer] init 0;
  buffer_f : [0..max_fast_buffer] init 0;
  consumer : [0..1] init 0;
 

  //produce
  //[] (fast=0) -> send_slow_p*p_g : (fast'=1);
  //[] (slow=0) -> (1-send_slow_p)*p_g : (slow'=1);
  [] (fast=0) -> p_g*0.4 : (fast'=1);
  [] (slow=0) -> p_g*0.6 : (slow'=1);

  //send
  // with probability proportional to the slow buffer occupancy, redirect to the fast buffer
  [] (slow=1) & (buffer_s<max_slow_buffer) -> p_t : (slow'=0) & (buffer_s' = buffer_s +1);
  [] (fast=1) & (buffer_f<max_fast_buffer) -> p_t : (fast'=0) & (buffer_f' = buffer_f +1);


  //receive
  [] (consumer=0) & (buffer_s > 0) -> r_slow_rate : (consumer'=1) & (buffer_s' = buffer_s - 1);
  [] (consumer=0) & (buffer_f > 0) -> (r_fast_rate + r_slow_rate)*(1-lossProbability) : (consumer'=1) & (buffer_f' = buffer_f - 1);
  // fast buffer loses the packet
  [lost] (consumer=0) & (buffer_f > 0) -> (r_fast_rate + r_slow_rate)*lossProbability : (buffer_f' = buffer_f - 1);

  //consume
  [consume] (consumer=1) ->  p_c : (consumer'=0);
endmodule


rewards "consume"
[consume] true: 1;
endrewards


rewards "full"
 (buffer_s = max_slow_buffer) | (buffer_f = max_fast_buffer): 1;
endrewards

//rewards "redirect"
//[redirect] true: 1;
//endrewards

rewards "lost"
[lost] true: 1;
endrewards